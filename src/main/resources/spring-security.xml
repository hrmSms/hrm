<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/context
		 http://www.springframework.org/schema/context/spring-context-4.0.xsd">

<context:component-scan base-package="vn.com.tma.hrm"/>
  <!-- http://docs.spring.io/spring-security/site/docs/4.0.2.RELEASE/reference/htmlsingle/#method-security-expressions -->
  <global-method-security pre-post-annotations="enabled" />

  <!-- Static content -->
  <http pattern="/assets/**" security="none" />
  <http pattern="/components/**" security="none" />
  <http pattern="/pages/**" security="none" />
  <http pattern="/shared/**" security="none" />

  <!-- Protected Requests -->
  <http use-expressions="true">
    <headers disabled="true"/>
    <csrf disabled="true"/>
    <intercept-url pattern="/login" access="permitAll()" />
    <intercept-url pattern="/register" access="permitAll()" />
    <intercept-url pattern="/validate" access="permitAll()" />
    <intercept-url pattern="/greeting" access="permitAll()" />
    <intercept-url pattern="/registrationConfirm" access="permitAll()" />
    <intercept-url pattern="/api/userStories/**" access="hasRole('ADMIN')" method="DELETE"/>
    <intercept-url pattern="/api/userStories/**" access="hasRole('ADMIN')" method="PATCH"/>
    <intercept-url pattern="/api/userStories/**" access="hasAnyRole('ADMIN', 'USER')" method="PUT"/>
    <intercept-url pattern="/api/userStories/**" access="hasAnyRole('USER', 'ADMIN')" method="GET"/>
    <intercept-url pattern="/api/userStories/**" access="hasRole('USER') or hasRole('ADMIN')" method="POST"/>

    <intercept-url pattern="/**" access="hasRole('ADMIN') or hasRole('USER')" />
    <form-login login-page='/login' 
    			username-parameter='email'
    			authentication-failure-url="/login?error"
    			default-target-url='/' />
				<!-- authentication-success-handler-ref="customAuthenticationSuccessHandler"/> -->				
    <remember-me token-validity-seconds="1209600"
    			remember-me-parameter="remember-me"
   				data-source-ref="hrmDataSource"/>
    <logout logout-url="/logout"
    		logout-success-url="/login"
    		delete-cookies="JSESSIONID"/>
  </http>
  
  
  
  <authentication-manager>
    <authentication-provider user-service-ref='myUserDetailsService'>
      <password-encoder hash="bcrypt" />
    </authentication-provider>
  </authentication-manager>

  <!-- <beans:bean id="roleVoter" class="org.springframework.security.access.vote.RoleHierarchyVoter">
    <beans:constructor-arg ref="roleHierarchy" />
  </beans:bean>
  <beans:bean id="roleHierarchy" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
    <beans:property name="hierarchy">
      <beans:value>
        ROLE_ADMIN > ROLE_STAFF
        ROLE_STAFF > ROLE_USER
        ROLE_USER > ROLE_GUEST
      </beans:value>
    </beans:property>
  </beans:bean> -->
  <!--
  In-memory users, for development only
  <authentication-manager>
    <authentication-provider>
      <user-service id="userDetailsService">
        <user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN" />
        <user name="user" password="user" authorities="ROLE_USER" />
      </user-service>
    </authentication-provider>
  </authentication-manager>  -->


	<!-- <beans:bean id="myUserDetailsService" class="vn.com.tma.hrm.security.MyUserDetailsService" /> -->

  <!-- <beans:bean id="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
    <beans:constructor-arg name="strength" value="15" />
  </beans:bean> -->
</beans:beans>